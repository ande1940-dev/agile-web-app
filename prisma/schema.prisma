// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Profile {
  firstName String
  lastName  String
  photo     String?
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  profile  Profile
  email    String  @unique
  password String?

  workspaces Workspace[] @relation("OwnedWorkspace")

  joinedWorkspaces   Workspace[] @relation("JoinedWorkspace", fields: [joinedWorkspaceIds], references: [id])
  joinedWorkspaceIds String[]    @db.ObjectId

  tasks Task[]
}

model Workspace {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?

  owner   User   @relation("OwnedWorkspace", fields: [ownerId], references: [id])
  ownerId String @db.ObjectId

  members   User[]   @relation("JoinedWorkspace", fields: [memberIds], references: [id])
  memberIds String[] @db.ObjectId

  tasks Task[]

  dueDate DateTime?
}

enum Status {
  TODO
  INPROGRESS
  INREVIEW
  COMPLETE
}

model Task {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description String?
  status      Status

  assignee   User?   @relation(fields: [assigneeId], references: [id])
  assigneeId String? @db.ObjectId

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String    @db.ObjectId

  dueDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
